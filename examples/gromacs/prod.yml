# Use &filename to create a reference to an output. Inputs in later steps can
# use *filename to dereference the filename and create an explicit edge.
steps:
  - grompp:
      in:
        config: '{"mdp": {"integrator":"sd", "rvdw":"1.0", "rcoulomb":"1.0", "coulombtype":"pme", "nsteps":"10000", "dt":0.002, "tc-grps":"system", "ref-t":"498", "tau-t":"2", "constraints":"h-bonds", "nstxout":"100", "nstenergy":"100", "pcoupl":"parrinello-rahman", "tau-p":"1", "ref-p":"1", "compressibility":"4.5e-5", "comm-mode":"linear", "comm-grps":"system"}}'
        output_tpr_path: '&prod.tpr'
        input_top_zip_path: '*genion.top'  # Use the original topology file so
# we don't have to question whether the topology gets messed up after file format conversions.
# (In fact, it is not exactly identical!)
  - mdrun:
      in:
        output_crd_path: '&prod.gro'
        output_trr_path: '&prod.trr' # Explicitly specify for cwl_watcher
        output_edr_path: '&prod.edr'
        #config: '{"use_gpu": "True"}'
  - cwl_watcher:
      in:
        #cachedir_path: /absolute/path/to/cachedir/ (automatically filled in by wic)
        file_pattern: ' *prod.trr'
        cwl_tool: analysis_realtime.yml
        max_times: '20'
        config: '{"(1, gmx_rms)": {"in": {"input_structure_path": "prod.tpr", "input_traj_path": "prod.trr"}}
                 ,"(2, gmx_rms)": {"in": {"input_structure_path": "prod.tpr", "input_traj_path": "prod.trr"}}
                 ,"(3, gmx_rms)": {"in": {"input_structure_path": "min.tpr", "input_traj_path": "prod.trr"}}
                 ,"(4, gmx_rgyr)": {"in": {"input_structure_path": "min.tpr", "input_traj_path": "prod.trr"}}
                 ,"(5, gmx_energy)": {"in": {"input_energy_path": "prod.edr"}}
                 }'

wic:
  graphviz:
    label: Production
  steps:
    (1, grompp):
      wic:
        graphviz:
          label: 'Update\nTopology'
    (2, mdrun):
      wic:
        graphviz:
          label: 'Molecular\nDynamics'
    (3, cwl_watcher):
      wic:
        graphviz:
          label: 'Real-time\nAnalysis'
          style: invis # Make this node invisible
