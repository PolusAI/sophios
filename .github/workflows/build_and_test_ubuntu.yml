name: Build And Run Test

on:
  push:
  pull_request: 
  workflow_dispatch:

env:
  BUILD_TYPE: Release

defaults:
  run:
    shell: bash -l {0} # Invoke bash in login mode, NOT interactive mode.
    # This will cause bash to look for the startup file ~/.bash_profile, NOT ~/.bashrc
    # This is important since conda init writes to ~/.bashrc

jobs:
  checkout:
    name: Checkout source code
    runs-on: [self-hosted, linux]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

  conda_setup:
    name: Setup conda / mamba
    runs-on: [self-hosted, linux]
    steps:
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge-pypy3
        miniforge-version: latest
        activate-environment: wic
        use-mamba: true
        channels: conda-forge
        python-version: "3.9.*" # pypy is not yet compatible with 3.10 and 3.11
    - working-directory: ${{github.workspace}}
      run: conda init bash
    - run: cp ~/.bashrc ~/.bash_profile # See note above

  conda_install:
    needs: [checkout, conda_setup]
    name: Install System Dependencies from Conda / Mamba
    runs-on: [self-hosted, linux]
    steps:
# The version of cwltool in apt (2.0.20200224214940) does not support CWL version 1.2
#      run: sudo apt install cwltool
# Use conda to install cwltool (version 3.1.20220224085855)
    - working-directory: ${{github.workspace}}
      run: ./conda_devtools.sh

  docker_pull:
    needs: [checkout, conda_setup]
    name: Docker pull
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: ./dockerPull.sh
      # For self-hosted runners, make sure the docker cache is up-to-date.

  wic_install:
    needs: [conda_install]
    name: Install Workflow Inference Compiler
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pip install ".[test]"

  mypy:
    needs: [wic_install]
    name: MyPy Check Type Annotations
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: mypy --no-incremental src/ tests/
      # NOTE: Do not use `mypy .` because then mypy will check both src/ and build/ causing:
      # src/wic/__init__.py: error: Duplicate module named "wic" (also at "./build/lib/wic/__init__.py")
      # NOTE: We need to use --no-incremental because there is a bug in mypy.
      # This bug most often occurs when using ruamel library.
      # See https://github.com/python/mypy/issues/12664

  pylint:
    needs: [wic_install]
    name: PyLint Check Code Quality
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pylint src/ tests/
      # NOTE: See fail-under threshold in .pylintrc

# NOTE: Do NOT add coverage to PYPY CI runs https://github.com/tox-dev/tox/issues/2252

  pytest_cwl_embedding_independence:
    needs: [wic_install]
    name: PyTest CWL Embedding Independence
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pytest -k test_cwl_embedding_independence # --cov --cov-config=.coveragerc_serial
      # NOTE: This test MUST be run in serial! See is_isomorphic_with_timeout()

  pytest_inline_subworkflows:
    needs: [wic_install]
    name: PyTest Inline Subworkflows
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pytest -k test_inline_subworkflows # --cov --cov-config=.coveragerc_serial
      # NOTE: This test MUST be run in serial! See is_isomorphic_with_timeout()

  pytest_fuzzy_compile:
    needs: [wic_install]
    name: PyTest Fuzzy Compile Test
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pytest -k test_fuzzy_compile

  pytest_run_examples:
    needs: [wic_install, docker_pull]
    name: Run PyTest Example Workflows
    runs-on: [self-hosted, linux]
    steps:
    - working-directory: ${{github.workspace}}
      run: pytest -k test_run_examples --workers 4 # --cov --cov-config=.coveragerc_parallel
